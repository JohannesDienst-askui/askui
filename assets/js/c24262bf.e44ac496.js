"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[54364],{35318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(27378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return n?a.createElement(f,r(r({ref:t},u),{},{components:n})):a.createElement(f,r({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},37026:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(25773),o=(n(27378),n(35318));const i={sidebar_position:4},r="Debug with Annotation",l={unversionedId:"general/Tooling/debug-with-annotation",id:"version-0.7.0/general/Tooling/debug-with-annotation",title:"Debug with Annotation",description:"The askui client offers an annotation tool which helps you to scaffold and debug your test code. It is recommended to be used whenever before writing a test code as well as after failing a test in askui. This tool is offered as two different functions:",source:"@site/versioned_docs/version-0.7.0/general/05-Tooling/debug-with-annotation.md",sourceDirName:"general/05-Tooling",slug:"/general/Tooling/debug-with-annotation",permalink:"/docs/0.7.0/general/Tooling/debug-with-annotation",draft:!1,editUrl:"https://github.com/askui/askui/tree/main/docs/versioned_docs/version-0.7.0/general/05-Tooling/debug-with-annotation.md",tags:[],version:"0.7.0",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Gitlab CI/CD",permalink:"/docs/0.7.0/general/Continuous Integration/gitlab-ci"},next:{title:"Configure Test Frameworks",permalink:"/docs/0.7.0/general/Tooling/configure_test_framework"}},s={},p=[{value:"Static Annotation",id:"static-annotation",level:2},{value:"Interactive Annotation",id:"interactive-annotation",level:2}],u={toc:p};function c(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"debug-with-annotation"},"Debug with Annotation"),(0,o.kt)("p",null,"The askui client offers an annotation tool which helps you to scaffold and debug your test code. It is recommended to be used whenever before writing a test code as well as after failing a test in askui. This tool is offered as two different functions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"annotate()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"annotateInteractively()"))),(0,o.kt)("h2",{id:"static-annotation"},"Static Annotation"),(0,o.kt)("p",null,"The helper function ",(0,o.kt)("inlineCode",{parentName:"p"},"annotate()")," creates an annotated HTML file of the given image and saves it into the given path. If no image is given, then it captures the specified screen and annotates the captured image."),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Synopsis and Arguments"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Synopsis")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"UiControlClient.annotate();\n\n// or\n\nUiControlClient.annotate({\n    imagePath: '<your-image-path>',\n    outputPath: '<path-of-the-generated-html>',\n    fileNamePrefix: '<prefix-of-the-output-file>',\n    customElements: CustomElementJson[] // more details in the example below\n});\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"If no argument is given, "),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"A screenshot of your specified screen will be taken, and annotated. Thereafter, it will be saved as an interactive HTML file into the ",(0,o.kt)("inlineCode",{parentName:"li"},"report/")," folder."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"imagePath"),":"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If defined, the image at the path is loaded and annotated."),(0,o.kt)("li",{parentName:"ul"},"If not defined, a screenshot of your specified screen is taken and annotated."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"outputPath"),":"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If defined, the generated HTML report will be saved in this path."),(0,o.kt)("li",{parentName:"ul"},"If not defined, a folder ",(0,o.kt)("inlineCode",{parentName:"li"},"report/")," will be created in the project root."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"fileNamePrefix"),": The prefix for the resulting HTML report. ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"customElements"),": A ",(0,o.kt)("em",{parentName:"p"},"list")," of custom elements. The AI model will use them to detect elements similar to them.")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"/*\nTakes a screenshot of your selected display,\nand produces an HTML report file inside the\ndefault output path <project_root>/report.\n*/\nawait aui.annotate();\n\n\n/*\nLoads the image 'my-screenshot.png'\nand produces an HTML report file inside\nthe output path 'annotation-reports/'\n*/\nawait aui.annotate(\n    {\n    imagePath: 'my-screenshot.png',\n    outputPath: 'annotation-reports/'\n    });\n\n\n/*\nLoads the image 'my-screenshot.png' together with\nthe custom elements and produces an HTML report file\ninside the output path 'annotation-reports/'\n*/\nawait aui.annotate(\n    {\n    imagePath: 'my-screenshot.png',\n    outputPath: 'annotaion-reports/',\n    customElements: [\n        {\n        customImage: '<custom_image_path|base64Image>',\n        imageCompareFormat: 'grayscale',\n        name: 'custom element 1'\n        },\n        {\n        /*\n        for this custom element the OCR AI model\n        will be used to extract text from the image,\n        since no name was given.\n        */\n        customImage: '<custom_image2_path|base64Image>',\n        imageCompareFormat: 'RGB',\n        }\n    ]\n    });\n")),(0,o.kt)("h2",{id:"interactive-annotation"},"Interactive Annotation"),(0,o.kt)("p",null,"Similar to ",(0,o.kt)("inlineCode",{parentName:"p"},"annotate()"),", but it launches a full screen window and shows the annotated screen in which you can interact with your mouse. This function doesn't save the result."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"/*\nIt lauhches a window that shows the result of the annotation.\nYou can interact with it by using your mouse.\nPress `ESC` to close the fullscreen window.\n*/\nawait aui.annotateInteractively();\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Interactive Annotation",src:n(44754).Z,width:"2560",height:"1080"})))}c.isMDXComponent=!0},44754:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/interactive-annotate-1e441df77569118330ccd1e7b50d3d0f.gif"}}]);